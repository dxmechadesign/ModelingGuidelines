# 2次元図面からモデリングする場合の定義
modeling_guidelines:
  # 1. 図面投影法の理解
  projection_methods:
    # 1.1 投影法の種類と地域性
    third_angle_projection:
      regions: ["日本", "アメリカ", "カナダ"]
      is_standard: true
  	layout_variations:
    	  standard_layout:
      	  front_view: "中央"
      	  top_view: "正面図の上"
      	  right_side_view: "正面図の右"
    
    	alternate_layout_type1:
      	  description: "縦配置レイアウト"
      	  top_view: "上段"
      	  front_view: "中段左または下段左"
      	  right_side_view: "中段右または下段右"
      	  note: "スペース効率を考慮した配置"
    
    first_angle_projection:
      regions: ["ヨーロッパ"]
      is_standard: false
      layout:
        front_view: "中央"
        top_view: "正面図の下"
        right_side_view: "正面図の左"
        bottom_view: "正面図の上"
        left_side_view: "正面図の右"

    # 1.2 基本原則
    fundamental_principles:
      primary_view:
        name: "正面図"
        status: "必ず存在する基準図"
        role: "全ての他図面の基準となる"
        identification: "最も詳細で重要な情報を含む図面"
      
      derivative_views:
        concept: "正面図以外は全て正面図から派生した図"
        relationship: "正面図との投影関係で定義される"
        validation_method: "外形線の延長による位置確認"
    
    # 1.3 図面識別の体系的手順
    view_identification_process:
      step1_front_view_identification:
        method: "最も詳細な図面を正面図として特定"
        criteria:
          - "加工フィーチャーが最も明確に表現"
          - "寸法情報が最も豊富"
          - "設計意図が最も明確"
        
      step2_adjacent_view_analysis:
        method: "正面図周辺の図面配置を分析"
        procedure:
          - "正面図の上下左右に配置された図面を特定"
          - "各図面と正面図との外形線対応を確認"
          - "投影関係の整合性を検証"
      
      step3_projection_line_verification:
        method: "外形線延長による図面種別確定"
        validation_rule: "正面図の外形幅線 = 隣接図面の外形幅線"
    
    # 1.4 各図面の配置関係と識別方法
    view_relationships:
      top_view:
        position: "正面図の上"
        projection_direction: "Z軸正方向から見下ろし"
        verification:
          width_correspondence: "正面図のX軸幅 = 上面図のX軸幅"
          projection_line: "正面図の左右輪郭線を上に延長 → 上面図の左右輪郭線と一致"
        identifying_features:
          - "穴が円形で表示される（Z軸方向の穴の場合）"
          - "高さ情報（Z軸）が失われる"
      
      bottom_view:
        position: "正面図の下"
        projection_direction: "Z軸負方向から見上げ"
        verification:
          width_correspondence: "正面図のX軸幅 = 下面図のX軸幅"
          projection_line: "正面図の左右輪郭線を下に延長 → 下面図の左右輪郭線と一致"
        note: "上面図の裏側から見た図"
      
      right_side_view:
        position: "正面図の右"
        projection_direction: "X軸正方向から見る"
        verification:
          height_correspondence: "正面図のZ軸高さ = 右側面図のZ軸高さ"
          depth_correspondence: "正面図に見えないY軸奥行き = 右側面図のX軸幅"
          projection_line: "正面図の上下輪郭線を右に延長 → 右側面図の上下輪郭線と一致"
      
      left_side_view:
        position: "正面図の左"
        projection_direction: "X軸負方向から見る"
        verification:
          height_correspondence: "正面図のZ軸高さ = 左側面図のZ軸高さ"
          projection_line: "正面図の上下輪郭線を左に延長 → 左側面図の上下輪郭線と一致"
        note: "右側面図の反対側から見た図"
      
      rear_view:
        position: "右側面図の右"
        projection_direction: "Y軸負方向から見る（正面図の反対方向）"
        verification:
          width_correspondence: "正面図のX軸幅 = 背面図のX軸幅"
          height_correspondence: "正面図のZ軸高さ = 背面図のZ軸高さ"
        note: "正面図の裏側から見た図"

    # 1.5 投影線による図面関係の確認方法
    projection_line_verification:
      horizontal_projection:
        rule: "水平方向の投影線は高さ（Z軸）情報を保持"
        application:
          - "正面図 ↔ 右側面図"
          - "正面図 ↔ 左側面図"
          - "上面図 ↔ 下面図（間接的）"
        verification_method: "正面図の水平線を左右に延長 → 側面図の対応する水平線と一致"
      
      vertical_projection:
        rule: "垂直方向の投影線は幅（X軸）情報を保持"
        application:
          - "正面図 ↔ 上面図"
          - "正面図 ↔ 下面図"
          - "右側面図 ↔ 背面図（間接的）"
        verification_method: "正面図の垂直線を上下に延長 → 上下面図の対応する垂直線と一致"
      
      depth_projection:
        rule: "奥行き（Y軸）情報は90度回転した図面で表現"
        application:
          - "上面図の縦方向 = 右側面図の横方向"
          - "正面図で見えない奥行き = 側面図の幅"

    # 1.6 図面識別の実践的手順
    practical_identification_steps:
      step1_layout_mapping:
        action: "図面の物理的配置をマッピング"
        method:
          - "中央または最大の図面を正面図候補として特定"
          - "周辺図面の相対位置を記録"
          - "図面間の距離と配置パターンを確認"
      
      step2_projection_line_check:
        action: "投影線の対応関係を確認"
        procedure:
          front_to_top:
            check: "正面図の左右端を上に延長 → 上の図面の左右端と一致するか"
            result_if_yes: "上の図面は上面図"
          
          front_to_right:
            check: "正面図の上下端を右に延長 → 右の図面の上下端と一致するか"
            result_if_yes: "右の図面は右側面図"
          
          front_to_left:
            check: "正面図の上下端を左に延長 → 左の図面の上下端と一致するか"
            result_if_yes: "左の図面は左側面図"
          
          front_to_bottom:
            check: "正面図の左右端を下に延長 → 下の図面の左右端と一致するか"
            result_if_yes: "下の図面は下面図"
      
      step3_consistency_verification:
        action: "図面間の整合性を総合確認"
        checks:
          dimensional_consistency:
            - "対応する軸の寸法が一致するか"
            - "隠れ線が適切に表現されているか"
          
          feature_consistency:
            - "同一フィーチャーが各図面で正しく投影されているか"
            - "穴、切欠きなどの位置関係が整合するか"

    # 1.7 特殊配置パターンへの対応
    special_layout_patterns:
      compact_layout:
        description: "スペース節約のための非標準配置"
        approach: "投影線対応関係を最優先で判定"
        warning: "位置関係だけでは判定不可"
      
      partial_view_layout:
        description: "一部の図面のみ表示"
        approach: "存在する図面間の関係から推定"
        method: "投影線の延長による仮想図面の想定"
      
      rotated_layout:
        description: "図面が回転配置されている場合"
        approach: "回転を考慮した投影線対応確認"
        note: "稀なケースだが存在する"

    # 1.8 エラー防止のための確認項目
    error_prevention_checklist:
      before_identification:
        preparation:
          - "[ ] 正面図を明確に特定した"
          - "[ ] 周辺図面の配置を確認した"
          - "[ ] 図面のサイズ比較を行った"
      
      during_identification:
        projection_check:
          - "[ ] 正面図から上への投影線を確認"
          - "[ ] 正面図から右への投影線を確認"
          - "[ ] 正面図から左への投影線を確認"
          - "[ ] 正面図から下への投影線を確認"
      
      after_identification:
        consistency_check:
          - "[ ] 各図面の寸法対応を確認"
          - "[ ] フィーチャーの投影整合性を確認"
          - "[ ] 隠れ線の表現が適切か確認"
      
      common_mistake_prevention:
        critical_warnings:
          - "⚠️ 位置だけでなく投影線対応を必ず確認"
          - "⚠️ 思い込みではなく実際の線の延長で判定"
          - "⚠️ 全ての図面が正面図との関係で定義される"

    # 1.9 投影法の理解における重要ポイント
    key_principles:
      core_concepts:
        - "正面図が全ての基準である"
        - "投影線の延長による確認が必須である"
        - "位置関係だけでは不十分である"
        - "外形線の対応関係が図面種別の決定要因である"
      
      benefit: "これらの原則に従うことで、図面配置に惑わされることなく正確な図面識別が可能になります。"

  # 2. 座標軸の定義
  coordinate_system:
    standard:
      x_axis: "水平方向（左右）"
      y_axis: "奥行き方向（手前・奥）"
      z_axis: "垂直方向（上下）"
    
    view_correspondence:
      front_view:
        visible_axes: ["X", "Z"]
        hidden_axis: "Y"
        x_direction: "水平方向"
        z_direction: "垂直方向"
      
      top_view:
        visible_axes: ["X", "Y"]
        hidden_axis: "Z"
        x_direction: "水平方向"
        y_direction: "垂直方向"
      
      right_side_view:
        visible_axes: ["Y", "Z"]
        hidden_axis: "X"
        y_direction: "水平方向"
        z_direction: "垂直方向"

  # 3. 寸法読み取り原則と図面観察プロセス
  dimension_reading:
    # 3.1 基本原則
    basic_principles:
      - "各図面には複数の寸法が表示されている"
      - "各図面では特定の平面（2次元）上の寸法情報のみ把握可能"
      - "立体的な寸法情報を得るには複数図面の情報を組み合わせる必要がある"
      - "同一部品の寸法は全図面で一致する必要がある"
    
    # 3.2 優先順位
    priority_order:
      1: "直接記載された寸法線の値"
      2: "図形の比例から推定される寸法"
      3: "他図面との整合性による補完"

  # 3.3 観察プロセスの厳格化
  observation_process_critical:
    step1_systematic_scanning:
      method: "図面を左上から右下へ系統的にスキャン"
      action: "数値を発見した瞬間にその位置を正確に記録"
      format: "数値○○ → △△図面の□□位置"
      prohibition: "記憶や推測に頼った位置特定の禁止"
    
    step2_position_verification:
      method: "発見した各数値について位置を再確認"
      requirement: "数値と図面の対応を2回以上確認"
      documentation: "位置記録の証拠保全"
    
    step3_cross_check:
      method: "記録した位置情報の総合確認"
      verification: "矛盾がないかの最終チェック"

  # 3.4 基本的観察能力の訓練
  basic_observation_training:
    fundamental_skills:
      visual_scanning:
        requirement: "図面上の要素を見落としなく抽出"
        method: "系統的な視線移動パターンの確立"
        verification: "発見した要素の位置を正確に記述可能"
      
      position_recording:
        requirement: "要素の位置を客観的に記録"
        format: "『上面図の左下』『正面図の右側』など具体的記述"
        prohibition: "曖昧な位置表現の使用禁止"
      
      fact_vs_interpretation:
        separation: "観察事実と解釈を完全分離"
        fact_example: "数値30が正面図の下部に記載"
        interpretation_example: "この30はX軸寸法である"
        rule: "事実記録段階では解釈を一切混入させない"

  # 3.5 寸法読み取りプロセスの強化
  dimension_reading_enhanced:
    critical_reading_process:
      step1_systematic_extraction:
        action: "図面ごとに表示されている全寸法を列挙"
        method: "寸法線と数値を1つずつ確実に確認"
        verification: "見落としがないか再確認"
      
      step2_axis_assignment:
        action: "各寸法をX,Y,Z軸に正確に割り当て"
        method: "図面の軸対応関係を確認しながら分類"
        warning: "推測や思い込みは禁止"
      
      step3_cross_validation:
        action: "複数図面間での寸法整合性確認"
        method: "同一軸の寸法が複数図面で一致するかチェック"
        error_handling: "不整合があれば読み取り見直し"

    common_errors_prevention:
      misreading_prevention:
        - "各図面の寸法を声に出して読み上げる（メンタルチェック）"
        - "寸法値をまず文字として認識し、その後数値として処理"
        - "隣接する寸法線との混同を避けるため1つずつ追跡"
      
      assumption_elimination:
        - "「大体このくらい」「だいたい～mm」の表現禁止"
        - "記載のない寸法は「不明」として明記"
        - "推測値と実測値を明確に区別"

  # 3.6 エラー発生原因の根本対策
  error_root_cause_analysis:
    primary_cause: "基本的な視覚情報処理の不正確性"
    contributing_factors:
      - "思い込みによる観察の歪み"
      - "推測と事実の混同"
      - "確認作業の不徹底"
      - "系統的観察方法の欠如"
    
    prevention_measures:
      immediate_actions:
        - "観察時の推測思考の完全停止"
        - "発見した情報の即座の文字記録"
        - "位置情報の具体的記述の義務化"
      
      systematic_improvements:
        - "観察→記録→確認の3段階プロセス確立"
        - "各段階での検証チェックポイント設定"
        - "エラー発生時の即座の全工程見直し"

  # 3.7 観察品質保証システム
  observation_quality_assurance:
    mandatory_procedures:
      initial_scan:
        - "[ ] 図面全体を系統的にスキャン完了"
        - "[ ] 発見した全数値を位置付きでリスト化"
        - "[ ] 記号・線種の分類完了"
      
      verification_scan:
        - "[ ] 初回記録の再確認実施"
        - "[ ] 見落とし要素の追加確認"
        - "[ ] 位置記録の正確性検証"
      
      final_validation:
        - "[ ] 観察結果の整合性確認"
        - "[ ] 推測要素の混入チェック"
        - "[ ] 事実記録の完全性確認"
    
    quality_indicators:
      success_criteria:
        - "全ての数値の位置が正確に特定されている"
        - "推測や解釈が事実記録に混入していない"
        - "複数回の確認で結果が一致している"
      
      failure_indicators:
        - "位置記録に曖昧な表現がある"
        - "数値の記載位置について確信が持てない"
        - "観察結果に矛盾がある"

  # 3.8 個人的改善計画
  personal_improvement_plan:
    immediate_actions:
      - "図面分析時は必ず系統的スキャンから開始"
      - "数値発見時は位置を具体的に記述"
      - "推測したくなったら作業を一時停止"
      - "観察結果を必ず2回以上確認"
    
    mindset_transformation:
      from_to:
        - from: "図面を見て直感的に理解しようとする"
          to: "図面を客観的データとして系統的に分析する"
        
        - from: "知識で補完しながら読み取る"
          to: "記載事実のみを正確に抽出する"

  # 3.9 寸法分類の明確化
  dimension_classification:
    overall_dimensions:
      definition: "部品の最大外形寸法"
      identification: "通常は各図面の最大寸法線"
      priority: "最優先で確定すべき寸法"
    
    feature_position_dimensions:
      definition: "加工フィーチャーの位置を示す寸法"
      identification: "基準面からの距離寸法"
      note: "部品外形寸法とは別に記載"
    
    feature_size_dimensions:
      definition: "加工フィーチャー自体のサイズ"
      identification: "φ、R、角度など"

  # 3.10 読み取り手順の体系化
  reading_procedure:
    step1_overall_dimensions:
      action: "各図面から部品全体寸法のみを抽出"
      method: "最大寸法線を特定"
      output: "X, Y, Z軸の全体寸法"
    
    step2_feature_positions:
      action: "フィーチャー位置寸法を抽出"
      method: "基準面からの距離寸法を特定"
      output: "各フィーチャーの3D座標"
    
    step3_feature_sizes:
      action: "フィーチャーサイズを抽出"
      method: "φ、深さ、角度等を特定"
      output: "各フィーチャーの形状パラメータ"

  # 3.11 図面解析チェックリスト
  analysis_checklist:
    dimension_type_check:
      - "[ ] 全体寸法と位置寸法を区別できているか"
      - "[ ] 各寸法線の意味を正しく解釈しているか"
      - "[ ] フィーチャー寸法を混同していないか"
    
    axis_correspondence_check:
      - "[ ] 各図面の軸対応を正しく理解しているか"
      - "[ ] 位置寸法の基準面を特定できているか"
      - "[ ] 3D座標への変換が正確か"
    
    verification_checklist:
      mandatory_checks:
        - "[ ] 正面図のZ軸寸法を確認済み"
        - "[ ] 上面図のX,Y軸寸法を確認済み" 
        - "[ ] 側面図の対応寸法を確認済み"
        - "[ ] 全寸法値をリスト化済み"
        - "[ ] 軸割り当てを検証済み"

  # 4. フィーチャー識別
  feature_identification:
    basic_shapes:
      rectangular_prism:
        all_views: "矩形"
        description: "直方体"
      
      cylinder:
        one_direction: "円"
        other_directions: "矩形"
        description: "円柱"
      
      cone:
        one_direction: "円"
        other_directions: "三角形"
        description: "円錐"
      
      sphere:
        all_directions: "円"
        description: "球"
    
    machining_features:
      through_hole:
        appearance: "複数図面で一貫した円形状"
        description: "貫通穴"
      
      counterbore:
        appearance: "段付き円形状"
        description: "ザグリ穴"
      
      chamfer:
        appearance: "角部の斜線"
        description: "面取り"
      
      fillet:
        appearance: "角部の円弧"
        description: "丸み（R）"

  # 5. モデリング手順
  modeling_workflow:
    basic_procedure:
      1: "図面の投影法確認"
      2: "基準図面の選定（通常は正面図）"
      3: "外形寸法の確定"
      4: "ベース形状の作成"
      5: "加工フィーチャーの追加"
      6: "寸法・形状の検証"
    
    base_shape_creation:
      method: "最大外形寸法で直方体を作成"
      dimension_source: "各軸方向の寸法を各図面から取得"
      origin_setting: "通常は角または中心"
    
    feature_addition_order:
      1: "減算フィーチャー（穴、切欠き）"
      2: "加算フィーチャー（突起、フランジ）"
      3: "仕上げフィーチャー（面取り、丸み）"

  # 6. 日本での穴加工表記
  hole_notations_japan:
    symbols:
      diameter: 
        symbol: "φ"
        reading: ["まる", "ふぁい"]
      
      hole_depth:
        symbol: "↧"
        reading: "あなふかさ"
      
      counterbore:
        symbol: "⌴"
        reading: ["ざぐり", "ふかざぐり"]
      
      countersink:
        symbol: "⌵"
        reading: "さらざぐり"
    
    hole_types:
      drill_hole:
        notation: ["φ10", "10キリ", "10D"]
        description: "ドリル工具で加工する穴"
        bottom_shape: "円錐状（118度）"
      
      reamer_hole:
        notation: ["φ10リーマ", "10DR", "φ10H7"]
        description: "リーマ工具で加工する寸法精度の高い穴"
      
      through_hole:
        notation: ["φ10 貫通", "φ10"]
        description: "貫通穴"
        depth_notation: "深さ指示なし"
      
      blind_hole:
        notation: ["φ10↧15", "φ10 深さ15"]
        description: "止まり穴（有底穴）"
        depth_definition: "円筒部の深さ（円錐部含まない）"
      
      counterbore_hole:
        shallow:
          notation: ["⌴φ20×1 φ10"]
          description: "ざぐり（浅い座面加工）"
          purpose: "六角ボルトの座面をきれいにする"
        
        deep:
          notation: ["⌴φ15×10 φ8"]
          description: "深ざぐり（深い沈み穴）"
          purpose: "六角穴付きボルトの頭を沈みこませる"
          bottom_shape: "フラット"
      
      countersink_hole:
        notation: ["⌵φ16 φ8", "⌵φ16×90° φ8"]
        description: "皿ざぐり（皿穴）"
        purpose: "皿ねじの頭を沈みこませる"
        angle: "90度円錐"
    
    multiple_holes:
      notation: "4×φ10"
      rule: "同一箇所の一群の穴の総数を記入"

  # 7. CAD実装設定
  cad_implementation:
    coordinate_setup:
      origin: [0, 0, 0]
      x_positive: "右"
      y_positive: "奥"
      z_positive: "上"
    
    creation_order:
      1: "CreateBox3DTool（外形作成）"
      2: "CreateCylinder3DTool（円形フィーチャー）"
      3: "BooleanSubtract（減算加工）"
      4: "BooleanUnite（結合加工）"
    
    hole_modeling:
      drill_hole:
        shape: "円柱 + 底面円錐（118度）"
      
      counterbore_shallow:
        shape: "貫通穴 + 浅い円筒穴（通常1mm）"
      
      counterbore_deep:
        shape: "貫通穴 + 深い円筒穴（底面フラット）"
      
      countersink:
        shape: "貫通穴 + 90度円錐穴"

  # 8. 検証項目
  verification:
    dimensional_consistency:
      - "各図面間での寸法一致"
      - "加工フィーチャーの位置関係"
      - "材料厚みの一貫性"
    
    geometric_consistency:
      - "対称性の確認"
      - "中心線の一致"
      - "角度・勾配の正確性"
    
    manufacturability:
      - "抜き勾配の考慮"
      - "最小寸法の確認"
      - "加工順序の妥当性"

  # 9. よくある間違いと対策
  common_mistakes:
    projection_confusion:
      problem: "投影法の混同"
      solution: "図面右下の投影記号を確認"
      symbols:
        third_angle: "円錐台の投影図"
        first_angle: "円錐の投影図"
    
    dimension_line_confusion:
      problem: "寸法線を実際の形状線と混同"
      solution: "寸法線（細線）と形状線（太線）を区別して判読"
      note: "寸法線は形状を示すものではない"
    
    dimension_duplication:
      problem: "同じ寸法を複数図面から取得"
      solution: "各軸方向の寸法は1つの図面から"
    
    hidden_line_oversight:
      problem: "隠れ線の見落とし"
      solution: "破線で示された内部形状の確認"

  # 10. 実務上の注意点
  practical_notes:
    modern_trends:
      - "普通公差を適用させる前提"
      - "ドリル穴は公差なし表記"
      - "リーマ穴ははめあい公差付き(H7など)"
      - "ねじ穴はM表記"
      - "加工方法指示なしでも混乱が生じない傾向"
    
    terminology:
      strict_distinction:
        counterbore_shallow: "ざぐり（浅い）"
        counterbore_deep: "深ざぐり（深い）"
      
      practical_usage:
        note: "除去加工を前提にしている設計者の多くは、深ざぐりのことをざぐりと表現"
    
    casting_parts:
      counterbore_indication: "ざぐりを指示する面に除去加工なしの表面粗さ記号がセット"
      depth_standard: "深さ指示が不要でもJISでの例が1mmなので1mmで指示"
